name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-skip-ci-trigger:
    name: "Detect CI Trigger: [skip-ci]"
    if: |
      github.repository == 'umr-lops/cdsodatacli'
      && github.event_name == 'push'
      || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  ci:
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    needs: detect-skip-ci-trigger

    if: needs.detect-skip-ci-trigger.outputs.triggered == 'false'

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          # need to fetch all tags to get a correct version
          fetch-depth: 0 # fetch all branches and tags

      - name: Setup environment variables
        run: |
          echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

          echo "CONDA_ENV_FILE=ci/requirements/environment.yaml" >> $GITHUB_ENV

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{ env.CONDA_ENV_FILE }}
          environment-name: cdsodatacli-tests
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{matrix.python-version}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          create-args: >-
            python=${{matrix.python-version}}
            conda

      - name: Install cdsodatacli
        run: |
          python -m pip install --no-deps -e .

      - name: Import cdsodatacli
        run: |
          python -c "import cdsodatacli"
      - name: Create secrets.yml from GitHub Secret
        run: |
            echo "${{ secrets.SECRET_FOR_TEST_DOWNLOAD_CDSE }}" > secrets.yml
        shell: bash

      - name: Export secrets as environment variables
        run: |
          export DEFAULT_LOGIN_CDSE=$(grep 'DEFAULT_LOGIN_CDSE' secrets.yml | cut -d':' -f2 | tr -d ' ')
          export DEFAULT_PASSWD_CDSE=$(grep 'DEFAULT_PASSWD_CDSE' secrets.yml | cut -d':' -f2 | tr -d ' ')
          echo "DEFAULT_LOGIN_CDSE=${DEFAULT_LOGIN_CDSE}" >> $GITHUB_ENV
          echo "DEFAULT_PASSWD_CDSE=${DEFAULT_PASSWD_CDSE}" >> $GITHUB_ENV
        shell: bash
      - name: Run tests
        env:
          DEFAULT_LOGIN_CDSE: ${{ env.DEFAULT_LOGIN_CDSE }}
          DEFAULT_PASSWD_CDSE: ${{ env.DEFAULT_PASSWD_CDSE }}
        run: |
          python -m pytest --cov=cdsodatacli
