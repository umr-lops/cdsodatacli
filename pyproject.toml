[project]
name = "cdsodatacli"
description = "OData client for Copernicus Data Space catalog"
readme = "README.md"
authors = [
  {name = "Antoine Grouazel"},
  {name = "Jean-Renaud Miadana"}
]
license = {text = "MIT"}
#repository = "https://github.com/umr-lops/cdsodatacli"
#homepage = "https://github.com/umr-lops/cdsodatacli"

keywords = ["Odata","copernicus-data-space","api"]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]
dependencies = [
    "geopandas",
    "numpy",
    "requests",
    "shapely",
    'tqdm',
    'pyyaml'
]
dynamic = ["version"]
[project.scripts]
queryCDS = "cdsodatacli.query:query_client"
downloadFromCDS = "cdsodatacli.download:main"
#[tool.poetry.dependencies]
#python = "^3.9"
#
#typer = {extras = ["all"], version = ">=0.4,<0.10"}
#rich = ">=10.14,<14.0"

#[tool.poetry.dev-dependencies]
#bandit = "^1.7.1"
#black = {version = "^23.10", allow-prereleases = true}
#darglint = "^1.8.1"
#isort = {extras = ["colors"], version = "^5.10.1"}
#mypy = "^1.0"
#mypy-extensions = "^1.0.0"
#pre-commit = "^3.5.0"
#pydocstyle = "^6.1.1"
#pylint = "^3.0.2"
#pytest = "^7.4.3"
#pyupgrade = "^3.15.0"
#safety = "^2.3.4"
#coverage = "^7.3.2"
#coverage-badge = "^1.1.0"
#pytest-html = "^4.1.1"
#pytest-cov = "^4.1.0"


[build-system]
requires = ["setuptools>=64.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["cdsodatacli"]

[tool.setuptools_scm]
fallback_version = "999"

[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
    | tests_metiers
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "cdsodatacli"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
